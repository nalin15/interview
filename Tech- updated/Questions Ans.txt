1) Skills Required: .NET, MVC/.NET Core, Power BI, SSIS, Azure and Angular

Develop and support applications built on Microsoft technologies including .NET
Framework (.NET/.NET Core/MVC/Web API), MSBI (SQL Server, SSIS, Power BI) and
Azure.
•             Design, develop, manage and support SQL Server databases that include but not limited
to- writing complex SQL queries, stored procedures, functions, triggers, managing permissions
etc.
•             Develop, support and monitor SSIS and SQL Server Agent based solutions.
•             Work with Agile Methodology and follow sprints effdectively.
•             Communicate effectively with the clients, users and onshore team.
•             Should be able to write technical documents and create presentations.
•             Ensure quality releases for highly scalable systems.
•             Participate actively in requirement gathering, detailed design, code reviews, and bug
discussions and drive discussion around appropriate solutions.
•             Influence the design, code, and architecture of applications by reviewing requirements,
functional specifications, design, data models, code, and test plans.
•             Ability to work independently is very important.
•             Should be able to work in a 24x7, fast paced and pressing environment.
•             Depending on the project need, should have flexibility to work in any shift, including
night shift.

2) MS-SQL on Azure
3) Net Core, Web.API, Entity Framework, Moq, Unity
4) Worked on Microservices - 
   https://developers.redhat.com/blog/2018/10/01/patterns-for-distributed-transactions-within-a-microservices-architecture/

5) Any knowledge in app migrations from in-house app to cloud is a big advantage
6) Reasonable knowledge of Azure (Blob, app services, VMs)


1)design patter
   a) singlton 
   b) absractMethod
   c) Abstract Factory Method
   d) Builder 

   e) Adapter
   f) bridge 
   f) facade pattern

   g) Decorator
   h) iterator
   i) Template
   j) Null object

2) solid principle  question 
  S- Single responsible
  o- open closed , open for extension and close for modificaion
  l- liskow subtitution
  i- interface segration 
  d- dependency injection.

https://www.c-sharpcorner.com/UploadFile/pranayamr/liskov-substitution-principle/

3) opps all concept 
    1) method hide,over-ridding, static, interface,abastract class
    2) Genric and Genric template and constraint 
    3) collection,Closer,equalto  and == , method over ridding , method  recognise , singleton seald, delegates,
	enumrable and Iqurablee , Ienumrable ,As and IS, outh 2.o ,Session, IOC, 
	unity, MOQ testing
 	Icomparable vs i compare,
	heap and stack ,string ,value, extension method.
   4) remove switch case with straightgey pattern.
			http://blogs.microsoft.co.il/gilf/2009/11/22/applying-strategy-pattern-instead-of-using-switch-statements/
   5) extension method . 
   6) authentication filter, globly implemetn loging and authentication 
   7) inforamtion in oauth 2.0 token and how to implement 
   8) how to talk micro service each other 
   9) aply formater : only allow xml as output
   10) load assembly dynamically : 
   11) load class dynamically 
   12) read json file from .net core. 
   
   api version : by url querystring , url and by media (header)
                 addurlversion service and middleware to startup file 
   not multiple get metod in same controller - work on prefix 
   add api document swagger by adding swashbuckle.aspnetcore pkg
   by add service and medilewar to startup class 
   
   autho token : JWt  (diffirent one) have 3 part in token (jsoan web token)
                   header : token algorithm , tokentpe
		   payload : user inforamotin 
		   signature : create signature useing header and payloaod and secreat key 
		   
  Static  Assembely , dynamic assembly, satelite Assembely, serilization, Genric,Attribute in  class ,Reflextion, 
  delegate, dynamics ,mutable and unmutale, drawback of extendgint interface ,template, determistic finilizetion,
  debug class and trace class,constant and readonly, API and microservice, iapplicationbuilder.use and ipplicationbuider.run ,
  crud opration in asp.net core.
  
  === .net core =============middleware 
  https://dotnetcoretutorials.com/2017/03/10/creating-custom-middleware-asp-net-core/
  
   

4) .net garbase  collector 
    use of dispose 
    GC genration 

5) CLR , CTS , JIT, srilog, kibana, elastic search, Rabit MQ.


6) MVC   
   a) Router 
   b) Fillter  : which class to be inherited for extending the filter 
   c) Exception Handling 
   d) cashing

7) .Net core ALL in Details and .Net standar, short circuite , caching , 
	what is medileware and how diffrence from service. 
    
    a) liskow subtitution : exampl in real world 
    b) dependecy injection in mvc and .net core 
    c) use abstract ,concreat, enum , interface in use dependecny injection 
    d) through resolve dependecny throgh property and method 
    
    scop and trainsiate method in .net core --  real use of thease 
      make multiple object in one http request . 
    
    for which class use trainsiate  and for which use scoped. 
    
    example : 
    one interface : Itransiate,   : push notification method  in interface. 
    email service
    message sercie 
    other service 
    
    clalint table :  3 client 
    1 subscribe eamil 
    2 message 
    3. other 
    
    controler : inject  inotifation interface 
    
    actioin : 
    inotifaction object to call push notification method 
    
    make in .net core .
    
    here client base service like email , message , othere
    
    --  input parameter for app.run() methoda 
         parameter app.use() 
	 
   -- delegete used in trainsiate  and scoped
   --  model binder in asp.core
   
   -- web api - validation  - 
   -- cutome validatition  -- 
  -- value provider in .net core  
  -- wild card partern in routing - like * 
  --  action /cotroler/* 
  
  ---action and func in delegate 
  -- anonomus fumction 
  --  user of ienubarable and ilist 
  --  param keywrod  in C#
  
  -- transsaction scope used for maintain transaction between to database table. 
  -- sequence betweenn two table across many table .  
  123 ,then 456 
  -- 
  -- singleton and static class diffirence 
  -- static class intanceiated 
  -- will the grabse collection collect from stack or heap 
  -- garbage collector - o,1,2
  -- marking phage , compection phage 
  --finally and dispose 
  -- idisposabe interface - 
  -- use of  disposable pattern  and finally 
  -- designe pattern 
  --straitgey comes behaviour 
  -- api versioning 
  -- attribute on []
  -- version on api on swageger .
  
   
   
   
    
    
    
    

8) database 

   a) temp table , temp variale and function,  index on temp table and table variabl ,
    b) function and store proc me diff
   c) index 
   d) CTE  , CTE with reporting things/ Recursive
   e) where and having , nth posigion , 2 largest 
   f) cross  and self join,full outerjoin
   h) cursor , trigger  , ## , # table, @@ table,
   i) funciton try catch, dense rank , row number ,rank. ,  row no by partision  by depart.
   j) table variable , temp table ... can we use/pass in nested procedure.
   h) set date + 5 day for each row 
   i) views - not update table why, order by not working, 
   j) nested transaction - savepoint @@ transaction   
   h) Merge statement for migration , 
   i) count(*), count(1), count(2) if column 2 have null value, sum(1),sum(2), sum(3) if  table  have 5 row,
   g) bulk inserting data in sql. from 5000 rows .
   g) sql injecion - without procedure. 
   g) corss sides scription , cross side frodery. 
   
    
   

9) Angular 2 interview question 

code complexcity : Cyclomatic complexity.


   
10) Azure micro services with  azure function,azure service bus, azure logic apps using asp.net core. 

